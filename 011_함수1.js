//함수 - 개념 학습 및 기본 사용법

//[1] : 함수란 무엇인가?
//(1) 함수는 특정한 동작이나 처리를 하도록 만들어진 코드 단위다.
//(2) 반복적인 작업을 처리해야 하는 경우 --> 함수로 만들어놓으면 이후 필요할 때 재사용할 수 있어서 매우 편리하다.
//(3) 함수는 호출의 결과로 어떤 결과를 반환(reture)하기도 하지만, 결과를 반환하지 않는 함수도 있다.
//(4) 함수는 호출시 매개변수(인자) 값들을 넘겨서 호출하는 경우도 있지만,매개변수(인자) 값 없이 호출하는 경우도 있다.
//(5) 함수는 만들어놓고 호출해서 사용하지 않으면 아무런 동작도 하지 않는다.


//[2] : 함수 종류 -->크게 4가지 유형
//(1) 반환값 --> x      받는 매개변수(인자)값 --> x
//(2) 반환값 --> x      받는 매개변수(인자)값 --> o
//(3) 반환값 --> o      받는 매개변수(인자)값 --> x
//(4) 반환값 --> o      받는 매개변수(인자)값 --> o


//[3] : return
// 함수 내부의 코드를 수행한 후 최종적인 결괏값을 반환 -->return


// 실습 
//[1-1] 반환값 --> x      받는 매개변수(인자)값 --> x
/*
function myFunc1(반환값){
    //함수 본문
    alert("myFunc1 함수 : 나는 누가 호출해주지 않는 한 동작하지 않습니다.")
    console.log("myFunc1 함수 : 나를 호출해보세요")
} //여기까지만 작성하면 아무런 동작을 하지않는다.
*/



//[1-2] 반환값 --> x      받는 매개변수(인자)값 --> o
/*
function myFunc2(a){
    
    alert(`myFunc2 함수 : 호출시 어떤 값을 넣어서 호출했군요. 그값은 =${a}입니다`);
    alert(typeof(a));
}

//myFunc2(100); //함수를 호출해줌. 
//소괄호 안에 들어있는 100이라는 숫자는 위의 function myFunc2(100) 으로 들어간다.

myFunc2(100,200,300); // 매개변수가 a하나인데 값은 세개이면 맨앞의 값이 나온다.




function myFunc22(a,b,c){
    alert(`a,b,c 메개변수(인자) 값을 다 더하면 =${a+b+c}`);
}

myFunc22(1,2,3); //6

*/



//[1-3] 반환값 --> o      받는 매개변수(인자)값 --> x
/*
function myFunc3(){

    return "63 빌딩";
}

// myFunc3(); //이렇게만 해주면 리턴된 값을 출력하지 못하기 때문에 --> 변수를 만들어서 리턴된 값을 저장(할당)해줘야한다.
let result=myFunc3();
//alert(`myFunc3 함수의 리턴 값은 ${result}`);
//alert(`myFunc3 함수의 리턴 값은 ${myFunc3()}`);
//둘의 결과값은 같다
*/



//[1-4] 반환값 --> o      받는 매개변수(인자)값 --> o
/*
function myFunc4(a){
    var result=a*2;
    return result;
}

//myFunc4(100); //200
//alert(myFunc4(100)); //값을 함수 바깥에서 줄 때
//alert(myFunc4()); //이렇게 아무값도 넣지 않으면 NaN이 출력된다.
//alert(result);    //Err-->undefined
*/




// 혼자 연습해보기 !!
// 유니,보리는 우리집 고양이 이름ㅎㅎ
function as(){
    alert("ㅎㅇㅎㅇ");
}
as();



function bori(a){
    alert(`내이름은 ${a}공주야`);
}
bori("보리");


function yuni2(){
    let c="유니보리공주들"
    return c+"사랑해"
}

alert(yuni2());



function yuni(c){
    return c+"공주"
}

alert(yuni("유니"));



